{"version":3,"sources":["hooks/useFrom.tsx","views/Home/form/index.tsx","utils/axios.ts"],"names":["useFrom","props","url","useState","data","setData","searchText","setSearchText","searchColumn","setSearchColumn","loading","setLoading","useEffect","getDefaultData","a","myAxios","getData","Demo","list","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","getColumnSearchProps","filterDropdown","setSelectedKeys","style","padding","placeholder","value","onChange","e","target","onPressEnter","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","FormTable","columns","title","sorter","b","Date","time","getTime","filters","ji","level","spinning","bordered","dataSource","options","isShow","document","getElementById","Promise","resolve","reject","other","Config","BaseURL","Axios","method","timeout","then","response","status"],"mappings":"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","file":"static/js/7.c4a0b66c.chunk.js","sourcesContent":["import { Input, Button, Space } from 'antd'\r\nimport { myAxios } from 'src/utils/axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Highlighter from 'react-highlight-words'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport { Itype } from 'src/views/Home/form'\r\n\r\ninterface IFromProps {\r\n  url: string\r\n}\r\n\r\nconst useFrom = (props: IFromProps) => {\r\n  const { url } = props\r\n  const [data, setData] = useState<Itype[]>([])\r\n  const [searchText, setSearchText] = useState<string>('')\r\n  const [searchColumn, setSearchColumn] = useState<string>('')\r\n  const [loading, setLoading] = useState<boolean>(true)\r\n  useEffect(() => {\r\n    getDefaultData()\r\n  }, [])\r\n\r\n  const getDefaultData = async () => {\r\n    const Demo = (await myAxios.getData({ url: url })) as { list: Itype[] }\r\n    setData([...Demo.list])\r\n    setLoading(false)\r\n  }\r\n\r\n  const getColumnSearchProps = (dataIndex: string): any => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }: any) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          placeholder={`输入搜索内容`}\r\n          value={selectedKeys[0]}\r\n          onChange={e =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            搜索\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            重置\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered: boolean) => (\r\n      <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\r\n    ),\r\n    onFilter: (value: string, record: any) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    render: (text: any) =>\r\n      searchColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  })\r\n\r\n  const handleSearch = (\r\n    selectedKeys: string[],\r\n    confirm: Function,\r\n    dataIndex: string\r\n  ) => {\r\n    confirm()\r\n    setSearchText(selectedKeys[0])\r\n    setSearchColumn(dataIndex)\r\n  }\r\n\r\n  const handleReset = (clearFilters: Function) => {\r\n    clearFilters()\r\n    setSearchText('')\r\n  }\r\n\r\n  return {\r\n    loading,\r\n    getColumnSearchProps,\r\n    data,\r\n  }\r\n}\r\nexport default useFrom\r\n","import React from 'react'\r\nimport { Table, Spin, Tooltip, Space } from 'antd'\r\nimport useFrom from 'src/hooks/useFrom'\r\nimport { Icon, FromAdd } from 'src/components'\r\nimport './index.scss'\r\n\r\nexport interface Itype {\r\n  time: Date\r\n  title: string\r\n  ji: boolean\r\n  level: number\r\n  school: string\r\n  address: string\r\n  desc: string\r\n}\r\n\r\nconst formDataStirng = '/form'\r\n\r\nconst FormTable: React.FC<{}> = () => {\r\n  const { loading, getColumnSearchProps, data } = useFrom({\r\n    url: formDataStirng,\r\n  })\r\n  const columns = [\r\n    {\r\n      title: '举办时间',\r\n      dataIndex: 'time',\r\n      sorter: (a: Itype, b: Itype) =>\r\n        new Date(a.time).getTime() - new Date(b.time).getTime(),\r\n    },\r\n    {\r\n      title: '赛事名称',\r\n      dataIndex: 'title',\r\n      ...getColumnSearchProps('title'),\r\n    },\r\n    {\r\n      title: '级别',\r\n      dataIndex: 'ji',\r\n      filters: [\r\n        {\r\n          text: '省级',\r\n          value: true,\r\n        },\r\n        {\r\n          text: '校级',\r\n          value: false,\r\n        },\r\n      ],\r\n      onFilter: (value: any, record: Itype) =>\r\n        record.ji === value ? true : false,\r\n      render(ji: boolean) {\r\n        if (ji === true) {\r\n          return '省级'\r\n        } else {\r\n          return '校级'\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: '年度',\r\n      dataIndex: 'level',\r\n      sorter: (a: Itype, b: Itype) => a.level - b.level,\r\n    },\r\n    {\r\n      title: '主办方',\r\n      dataIndex: 'school',\r\n      ...getColumnSearchProps('school'),\r\n    },\r\n    {\r\n      title: '地点',\r\n      dataIndex: 'address',\r\n      ...getColumnSearchProps('address'),\r\n    },\r\n    {\r\n      title: '描述',\r\n      dataIndex: 'desc',\r\n      ...getColumnSearchProps('desc'),\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'cao',\r\n      render: (text: string, record: Itype) => (\r\n        <Space size=\"middle\">\r\n          <Tooltip title=\"查看详情\">\r\n            <span>\r\n              <Icon type=\"iconicon-chakanxq\" />\r\n            </span>\r\n          </Tooltip>\r\n          <Tooltip title=\"删除\">\r\n            <span>\r\n              <Icon type=\"iconshanchu\" />\r\n            </span>\r\n          </Tooltip>\r\n          <Tooltip title=\"修改\">\r\n            <span>\r\n              <Icon type=\"iconxiugai\" />\r\n            </span>\r\n          </Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ]\r\n  return (\r\n    <>\r\n      <FromAdd />\r\n      <Spin spinning={loading}>\r\n        <Table bordered columns={columns} dataSource={data} />\r\n      </Spin>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FormTable\r\n","import Axios from \"axios\";\r\nimport Config from \"../config\";\r\n\r\nexport interface IAxios {\r\n  url: string;\r\n  methods?: string;\r\n  isShow?: boolean;\r\n  data?: object;\r\n  other?: boolean;\r\n}\r\n\r\nexport class myAxios {\r\n  static getData(options: IAxios) {\r\n    if (options && options.isShow) {\r\n      let loading = document.getElementById(\"ajaxLoading\") as HTMLElement;\r\n      loading.style.display = \"block\";\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      let url = options.other ? options.url : `${Config.BaseURL}${options.url}`;\r\n      Axios({\r\n        url,\r\n        method: \"get\",\r\n        timeout: 3000,\r\n      }).then((response) => {\r\n        if (options && options.isShow) {\r\n          let loading = document.getElementById(\"ajaxLoading\") as HTMLElement;\r\n          loading.style.display = \"none\";\r\n        }\r\n        if (response.status === 200) {\r\n          resolve(response.data);\r\n        } else {\r\n          reject(response.data.data);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}