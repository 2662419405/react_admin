{"version":3,"sources":["store/constants/index.ts","components/footer/index.tsx","components/footer/foot.tsx","components/loading/index.tsx","components/loading/loading.tsx","constants/menu.ts","components/menu/MenuDefault.tsx","components/menu/index.tsx","components/Header/Header.tsx","components/Header/index.tsx","components/ErrorBoundary/index.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/Bread/index.tsx","components/Bread/Bread.tsx","components/Icon/Icon.tsx","components/Icon/index.tsx","components/FromAdd/index.tsx","config/index.ts","store/actions/user.ts","assets/img/logo.f16d.png","router/router.tsx","router/index.tsx","store/reudcers/user.ts","store/reudcers/index.ts","store/index.ts","index.tsx"],"names":["GETUSRTINFO","Footer","props","className","href","target","rel","Loading","id","MenuConfig","key","icon","title","children","Sider","MenuDefault","withRouter","collapsed","makeTreeDom","useCallback","data","map","v","SubMenu","type","Item","to","treeDom","useMemo","trigger","collapsible","src","require","theme","mode","defaultSelectedKeys","history","location","pathname","Header","useState","fullScreen","setFullScreen","requestFullScreen","element","document","documentElement","requestMethod","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","call","onMenuClick","e","onLogout","exitFullScreen","exitMethod","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","style","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","setColl","placement","FullscreenExitOutlined","FullscreenOutlined","overlay","selectedKeys","UserOutlined","MessageOutlined","Divider","LogoutOutlined","SmileOutlined","ErrorBoundary","state","hasError","prevP","this","setState","WarningOutlined","PureComponent","Bread","HomeOutlined","IconFont","createFromIconfontCN","scriptUrl","Config","Icon","FromAdd","visible","setVisible","useForm","form","size","onCancel","footer","initialValues","ji","level","name","onFinish","values","message","success","resetFields","onFinishFailed","errorInfo","console","log","labelCol","span","wrapperCol","label","rules","required","format","placeholder","Group","value","max","min","offset","htmlType","BaseURL","ID","setUserInfo","res","dispatch","module","exports","Login","lazy","BasicLayout","Routers","connect","userinfo","User","setUserInfoMy","useEffect","localStorage","getItem","uid","_loginName","_password","onEnter","Component","fallback","exact","path","component","render","defaultState","provider","undefined","createdAt","bio","username","password","loginName","avatarUrl","email","role","token","combineReducers","action","obj","JSON","parse","stringify","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducer","ReactDOM","locale","zh_CN","getElementById"],"mappings":"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","file":"static/js/main.e33971ba.chunk.js","sourcesContent":["export const GETUSRTINFO = \"getUserInfo\";\r\n","import Footer from \"./foot\";\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Footer: React.FC<{}> = (props) => {\r\n  return (\r\n    <div className=\"global-footer\">\r\n      <div>\r\n        Copyright @ 2020 TS+Hooks\r\n        <a\r\n          href=\"https://github.com/2662419405\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          &nbsp;2662419405\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Loading from \"./loading\";\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading: React.FC<{}> = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <div id=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","/**\r\n * 支持多级菜单联动\r\n */\r\nexport const MenuConfig = [\r\n  {\r\n    key: '/home',\r\n    icon: 'iconhome',\r\n    title: '首页',\r\n  },\r\n  {\r\n    key: '/home/echarts',\r\n    icon: 'iconshuju',\r\n    title: '数据管理',\r\n  },\r\n  {\r\n    key: '/home/form',\r\n    icon: 'icon17',\r\n    title: '表单模拟',\r\n  },\r\n  {\r\n    key: '/home/user',\r\n    icon: 'iconzhanghao',\r\n    title: '账号管理',\r\n    children: [\r\n      {\r\n        key: '/home/user/admin',\r\n        title: '个人中心',\r\n      },\r\n      {\r\n        key: '/home/user/level',\r\n        title: '个人设置',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: '/home/book',\r\n    icon: 'iconbiji',\r\n    title: '笔记管理',\r\n  },\r\n  {\r\n    key: '/home/about',\r\n    icon: 'iconguanyu',\r\n    title: '关于本站',\r\n  },\r\n]\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { Menu, Layout } from \"antd\";\r\nimport \"./MenuDefault.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { MenuConfig } from \"src/constants\";\r\nimport { Icon } from \"src/components\";\r\nimport { Menu as MenuTypes } from \"src/types/global\";\r\n\r\nconst { Sider } = Layout;\r\n\r\ninterface Iprops extends RouteComponentProps {\r\n  collapsed: boolean;\r\n}\r\n\r\nconst MenuDefault: React.FC<Iprops> = (props) => {\r\n  const { collapsed } = props;\r\n\r\n  /** 构建树结构 **/\r\n  const makeTreeDom = useCallback((data): JSX.Element[] => {\r\n    return data.map((v: MenuTypes) => {\r\n      if (v.children) {\r\n        return (\r\n          <Menu.SubMenu\r\n            key={v.key}\r\n            title={\r\n              <span>\r\n                <Icon type={v.icon} />\r\n                <span>{v.title}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {makeTreeDom(v.children)}\r\n          </Menu.SubMenu>\r\n        );\r\n      } else {\r\n        return (\r\n          <Menu.Item key={v.key}>\r\n            <Link to={v.key}>\r\n              <Icon type={v.icon} />\r\n              <span>{v.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  /** 处理原始数据，将原始数据处理为层级关系 **/\r\n  const treeDom: JSX.Element[] = useMemo(() => {\r\n    const treeDom = makeTreeDom(MenuConfig);\r\n    return treeDom;\r\n  }, [MenuConfig]);\r\n\r\n  return (\r\n    <Sider trigger={null} collapsible collapsed={collapsed}>\r\n      <div className=\"logo-home\">\r\n        <Link className=\"logo-link\" to=\"/\">\r\n          <img src={require(\"src/assets/img/logo.f16d.png\")} />\r\n          <div className={collapsed ? \"show\" : \"\"}>TS + Hooks</div>\r\n        </Link>\r\n      </div>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"inline\"\r\n        defaultSelectedKeys={[props.history.location.pathname]}\r\n      >\r\n        {treeDom}\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default withRouter(MenuDefault);\r\n","import MenuDefault from \"./MenuDefault\";\r\nexport default MenuDefault;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  FullscreenExitOutlined,\r\n  FullscreenOutlined,\r\n  MessageOutlined,\r\n  SmileOutlined,\r\n  LogoutOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"./Header.scss\";\r\nimport { Layout, Tooltip, Menu, Dropdown } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\ninterface Element {\r\n  webkitRequestFullscreen?: Function;\r\n  webkitExitFullscreen?: Function;\r\n  mozRequestFullScreen?: Function;\r\n  mozCancelFullScreen?: Function;\r\n  msRequestFullscreen?: Function;\r\n  msExitFullscreen?: Function;\r\n}\r\n\r\ninterface Iprops {\r\n  collapsed: boolean;\r\n  setColl: (coll: boolean) => void;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst Headers: React.FC<Iprops> = (props) => {\r\n  const { collapsed } = props;\r\n  const [fullScreen, setFullScreen] = useState(false); // 当前是否是全屏状态\r\n  // 进入全屏\r\n  const requestFullScreen = useCallback(() => {\r\n    const element: HTMLElement & Element = document.documentElement;\r\n    // 判断各种浏览器，找到正确的方法\r\n    const requestMethod =\r\n      element.requestFullscreen || // W3C\r\n      element.webkitRequestFullscreen || // Chrome等\r\n      element.mozRequestFullScreen || // FireFox\r\n      element.msRequestFullscreen; // IE11\r\n    if (requestMethod) {\r\n      requestMethod.call(element);\r\n    }\r\n    setFullScreen(true);\r\n  }, []);\r\n\r\n  // 退出登录\r\n  const onMenuClick = useCallback(\r\n    (e) => {\r\n      // 退出按钮被点击\r\n      if (e.key === \"logout\") {\r\n        props.onLogout();\r\n      }\r\n    },\r\n    [props]\r\n  );\r\n\r\n  // 退出全屏\r\n  const exitFullScreen = useCallback(() => {\r\n    // 判断各种浏览器，找到正确的方法\r\n    const element: Document & Element = document;\r\n    const exitMethod =\r\n      element.exitFullscreen || // W3C\r\n      element.mozCancelFullScreen || // firefox\r\n      element.webkitExitFullscreen || // Chrome等\r\n      element.msExitFullscreen; // IE11\r\n\r\n    if (exitMethod) {\r\n      exitMethod.call(document);\r\n    }\r\n    setFullScreen(false);\r\n  }, []);\r\n  const toggle = () => {\r\n    props.setColl(!collapsed);\r\n  };\r\n  return (\r\n    <Header className=\"site-layout-background header\" style={{ padding: 0 }}>\r\n      <Tooltip title={props.collapsed ? \"展开菜单\" : \"收起菜单\"}>\r\n        {React.createElement(\r\n          collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n          {\r\n            className: \"trigger\",\r\n            onClick: toggle,\r\n          }\r\n        )}\r\n      </Tooltip>\r\n      <div className=\"rightBox\">\r\n        <Tooltip placement=\"bottom\" title={fullScreen ? \"退出全屏\" : \"全屏\"}>\r\n          <div className=\"full all_center\">\r\n            {fullScreen ? (\r\n              <FullscreenExitOutlined\r\n                className=\"icon\"\r\n                onClick={exitFullScreen}\r\n              />\r\n            ) : (\r\n              <FullscreenOutlined\r\n                className=\"icon\"\r\n                onClick={requestFullScreen}\r\n              />\r\n            )}\r\n          </div>\r\n        </Tooltip>\r\n        <Dropdown\r\n          overlay={\r\n            <Menu className=\"menu\" selectedKeys={[]} onClick={onMenuClick}>\r\n              <Menu.Item key=\"user\">\r\n                <Link to=\"/home/user/admin\">\r\n                  <UserOutlined />\r\n                  个人中心\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"message\">\r\n                <Link to=\"/home/user/level\">\r\n                  <MessageOutlined />\r\n                  个人设置\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Divider />\r\n              <Menu.Item key=\"logout\">\r\n                <LogoutOutlined />\r\n                退出登录\r\n              </Menu.Item>\r\n            </Menu>\r\n          }\r\n          placement=\"bottomRight\"\r\n        >\r\n          <div className=\"userhead all_center\">\r\n            <SmileOutlined />\r\n            <span className=\"username\">admin</span>\r\n          </div>\r\n        </Dropdown>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Headers;\r\n","import Header from \"./Header\";\r\nexport default Header;\r\n","import ErrorBoundary from \"./ErrorBoundary\";\r\nexport default ErrorBoundary;\r\n","/**\r\n * 子组件有任何报错都会传递到此\r\n * 用于页面异步加载出错时显示\r\n * 此组件只能用class的方式，因为hooks不支持getDerivedStateFromError 和 componentDidCatch\r\n */\r\nimport React from \"react\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\n\r\ninterface IState {\r\n  hasError: boolean;\r\n}\r\n\r\ninterface Iprops {\r\n  location: Location;\r\n  children: JSX.Element;\r\n}\r\n\r\nclass ErrorBoundary extends React.PureComponent<Iprops, IState> {\r\n  constructor(props: Iprops) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidUpdate(prevP: Iprops) {\r\n    if (prevP.location !== this.props.location) {\r\n      this.setState({\r\n        hasError: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"error-boundary\">\r\n          <WarningOutlined className=\"error-icon\" />\r\n          <div>加载出错,请刷新页面</div>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import Bread from \"./Bread\";\r\nexport default Bread;\r\n","import React from \"react\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport { HomeOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport \"./style.scss\";\r\n\r\nconst Breads: React.FC<{}> = () => {\r\n  return (\r\n    <div className=\"bread\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"\">\r\n          <HomeOutlined className=\"bread-icon\" />\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"\">\r\n          <UserOutlined />\r\n          <span>Application List</span>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>Application</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breads;\r\n","import React from \"react\";\r\nimport { createFromIconfontCN } from \"@ant-design/icons\";\r\nimport Config from \"src/config/index\";\r\n\r\ninterface Iprops {\r\n  type: string;\r\n}\r\n\r\nconst IconFont = createFromIconfontCN({\r\n  scriptUrl: Config.scriptUrl,\r\n});\r\n\r\nconst Icon = (props: Iprops) => {\r\n  return <IconFont type={props.type}></IconFont>;\r\n};\r\n\r\nexport default Icon;\r\n","import Icon from \"./Icon\";\r\nexport default Icon;\r\n","import React, { useState } from 'react'\r\nimport './index.scss'\r\nimport {\r\n  Button,\r\n  Form,\r\n  Modal,\r\n  Input,\r\n  DatePicker,\r\n  Space,\r\n  InputNumber,\r\n  Radio,\r\n  message,\r\n} from 'antd'\r\n\r\nconst FromAdd: React.FC<{}> = props => {\r\n  const [visible, setVisible] = useState(false)\r\n  const [form] = Form.useForm()\r\n\r\n  const submitData = (values: any) => {\r\n    setVisible(false)\r\n    message.success('提交数据成功!!!')\r\n    form.resetFields()\r\n  }\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n  const layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 },\r\n  }\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setVisible(true)}\r\n        size=\"large\"\r\n        type=\"primary\"\r\n        className=\"btn-bottom\"\r\n      >\r\n        添加新数据\r\n      </Button>\r\n      <Modal\r\n        title=\"提交数据\"\r\n        onCancel={() => setVisible(false)}\r\n        visible={visible}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={form}\r\n          initialValues={{ ji: true, level: 2020 }}\r\n          name=\"basic\"\r\n          onFinish={submitData}\r\n          onFinishFailed={onFinishFailed}\r\n          {...layout}\r\n        >\r\n          <Form.Item label=\"时间\" name=\"time\" rules={[{ required: true }]}>\r\n            <DatePicker format=\"YYYY-MM-DD\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"赛事名称\" name=\"title\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入赛事名称\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"赛事级别\" name=\"ji\" rules={[{ required: true }]}>\r\n            <Radio.Group>\r\n              <Radio value={true}>省赛</Radio>\r\n              <Radio value={false}>校赛</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item label=\"年度\" name=\"level\" rules={[{ required: true }]}>\r\n            <InputNumber max={2020} min={2010} />\r\n          </Form.Item>\r\n          <Form.Item label=\"学校\" name=\"school\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入学校\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"地址\" name=\"address\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入地址\" />\r\n          </Form.Item>\r\n          <Form.Item label=\"描述信息\" name=\"desc\" rules={[{ required: true }]}>\r\n            <Input placeholder=\"请输入描述信息\" />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 4, span: 20 }}>\r\n            <Space>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                提交\r\n              </Button>\r\n              <Button\r\n                onClick={() => form.resetFields()}\r\n                type=\"default\"\r\n                htmlType=\"reset\"\r\n              >\r\n                重置\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FromAdd\r\n","const Config = {\r\n  // 数据是本人搭建的一个easy-mock, 可以直接使用 http://mock.shtodream.cn\r\n  BaseURL: \"http://mock.shtodream.cn/mock/5ea655fa0f0ab03f6d504777\",  //axios发出请求的BaseURL\r\n  ID: \"5ea655fa0f0ab03f6d504777\",                          //axios的ID\r\n  scriptUrl: \"//at.alicdn.com/t/font_1792253_ysw9812zsto.js\", //自定义图标库js脚本地址\r\n};\r\n\r\nexport default Config;\r\n","import { GETUSRTINFO } from \"src/store/constants\";\r\n\r\nexport const setUserInfo = (res:object) => {\r\n  return (dispatch: any) => {\r\n    const arr = {\r\n      type: GETUSRTINFO,\r\n      value: res,\r\n    };\r\n    dispatch(arr);\r\n  };\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.f16d.99476ef3.png\";","import React, { Suspense, useCallback, useEffect } from \"react\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Loading } from \"src/components\";\r\nimport { StoreState } from \"src/store\";\r\nimport { UserStateProps } from \"src/store/reudcers/user\";\r\nimport { setUserInfo } from \"src/store/actions\";\r\nconst Login = React.lazy(() => import(\"src/views/login\"));\r\nconst BasicLayout = React.lazy(() => import(\"src/layout/BasicLayout\"));\r\n\r\ninterface Iprops extends UserStateProps {\r\n  setUserInfoMy: any;\r\n}\r\n\r\nconst Routers: React.FC<Iprops> = (props) => {\r\n  useEffect(() => {\r\n    const userinfo = localStorage.getItem(\"userinfo\");\r\n    /**\r\n     * sessionStorage中有user信息，但store中没有\r\n     * 说明刷新了页面，需要重新同步user数据到store\r\n     * **/\r\n    if (userinfo && !props.userinfo.uid) {\r\n      props.setUserInfoMy({ _loginName: \"admin\", _password: \"123456\" });\r\n    }\r\n  }, []);\r\n\r\n  /** 跳转到某个路由之前触发 **/\r\n  const onEnter = useCallback((Component, props) => {\r\n    /**\r\n     *  有用户信息，说明已登录\r\n     *  没有，则跳转至登录页\r\n     * **/\r\n    const userinfo = localStorage.getItem(\"userinfo\");\r\n    if (userinfo) {\r\n      return <Component {...props} />;\r\n    }\r\n    return <Redirect to=\"/\" />;\r\n  }, []);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Suspense fallback={<Loading />}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/home\" render={(props) => onEnter(BasicLayout, props)} />\r\n        </Switch>\r\n      </Suspense>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state: StoreState) => ({\r\n    userinfo: state.User.userinfo,\r\n  }),\r\n\r\n  (dispatch: any) => {\r\n    return {\r\n      setUserInfoMy(res: object) {\r\n        dispatch(setUserInfo(res));\r\n      },\r\n    };\r\n  }\r\n)(Routers);\r\n","import Routers from \"./router\";\r\nexport default Routers;\r\n","import { GETUSRTINFO } from \"src/store/constants\";\r\n\r\ninterface UserInfoProps {\r\n  provider: string;\r\n  uid: number | undefined;\r\n  username: string;\r\n  password: string;\r\n  loginName: string;\r\n  avatarUrl: string;\r\n  email: string;\r\n  role: string;\r\n  token: string | undefined;\r\n  bio: string;\r\n  location: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport interface UserStateProps {\r\n  userinfo: UserInfoProps;\r\n}\r\n\r\nexport const defaultState: UserStateProps = {\r\n  userinfo: {\r\n    provider: \"\", // github ?\r\n    uid: undefined, // 用户ID\r\n    createdAt: \"\", // 注册时间\r\n    bio: \"\", // 简介\r\n    username: \"\", // 昵称\r\n    password: \"\", // 经过MD5加密后的密码\r\n    loginName: \"\", // 登录名\r\n    avatarUrl: \"\", // 头像\r\n    email: \"\",\r\n    role: \"\",\r\n    token: undefined, // 登录凭证\r\n    location: \"\",\r\n  },\r\n};\r\n\r\ninterface Iactions {\r\n  type: string;\r\n  value: any;\r\n}\r\n\r\nexport default (state = defaultState, action: Iactions): UserStateProps => {\r\n  switch (action.type) {\r\n    case GETUSRTINFO:\r\n      const obj: UserStateProps = JSON.parse(JSON.stringify(state));\r\n      obj.userinfo.username = action.value._loginName;\r\n      obj.userinfo.password = action.value._password;\r\n      return obj;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport User from \"./user\";\r\n\r\nexport default combineReducers({\r\n  User,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reducer from \"./reudcers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { UserStateProps } from \"./reudcers/user\";\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\r\n\r\nexport interface StoreState {\r\n  User: UserStateProps;\r\n}\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/styles/index.scss\";\r\nimport App from \"./router\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"antd/dist/antd.css\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConfigProvider locale={zh_CN}>\r\n      <App />\r\n    </ConfigProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}